{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/Junior-plus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","s","header","to","link","button","Error404","Message","props","chat","avatarWrappper","avatar","src","text","name","message","time","messageData","HW1","Affair","affair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","f","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","errorInput","input","container","value","onChange","onBlur","disabled","GreetingContainer","users","addUserCallback","setName","setError","length","e","newName","currentTarget","trim","alert","HW3","setUsers","user","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","blue","PreJunior","Junior","JuniorPlus","RoutesHw","path","element","HW5","Routes","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.e5cd4269.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"Message_chat__LR-PW\",\"avatarWrappper\":\"Message_avatarWrappper__LlrgK\",\"avatar\":\"Message_avatar__3nMyX\",\"text\":\"Message_text__3OY5b\",\"name\":\"Message_name__3UMyz\",\"time\":\"Message_time__okVI8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Header_button__ik_qX\",\"link\":\"Header_link__25E8E\",\"activeLink\":\"Header_activeLink__6z0IZ\",\"header\":\"Header_header__2CwUx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3n799\",\"errorInput\":\"SuperInputText_errorInput__2A3CZ\",\"error\":\"SuperInputText_error__3ocBg\",\"input\":\"SuperInputText_input__-sxM0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Greeting_container__3L5SU\",\"error\":\"Greeting_error__32l8p\",\"inputClass\":\"Greeting_inputClass__1X0Th\",\"errorInput\":\"Greeting_errorInput__zfy2X\",\"button\":\"Greeting_button__1ihnr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__35TKQ\",\"button\":\"SuperButton_button__3TJWj\",\"red\":\"SuperButton_red__23_z8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3B6IG\",\"column\":\"HW4_column__2gBKg\",\"testSpanError\":\"HW4_testSpanError__1t767\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__QgXym\",\"spanClassName\":\"SuperCheckbox_spanClassName__13-iJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__LEr10\"};","import React, {MouseEvent, useState} from 'react'\nimport {NavLink} from \"react-router-dom\";\n\n\nimport s from './Header.module.css'\n\n\nfunction Header() {\n\n    return (\n        <div className={s.header}>\n\n            <div>\n                <NavLink to={'/pre-junior'} className={s.link}>Pre-junior</NavLink>\n                <NavLink to={'/junior'} className={s.link}>Junior</NavLink>\n                <NavLink to={'/junior-plus'} className={s.link}>Junior-plus</NavLink>\n            </div>\n            <button className={s.button}>Menu</button>\n\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\n\nimport s from './Message.module.css'\n\ntype PropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: PropsType) {\n\nreturn (\n    <div className={s.chat}>\n        <div className={s.avatarWrappper}>\n            <img className={s.avatar} src={props.avatar}/>\n        </div>\n        <div className={s.text}>\n            <div className={s.name}>\n                {props.name}\n            </div>\n            <div className={s.message}>\n                {props.message}\n            </div>\n            <div className={s.time}>\n                {props.time}\n            </div>\n        </div>\n    </div>\n)\n}\n\nexport default Message;\n\n\n","import React from 'react'\nimport {isNumber} from \"util\";\nimport {strict} from \"assert\";\nimport {stringify} from \"querystring\";\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\n\nfunction HW1 () {\n\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n            {/*should work (должно работать)*/}\n            <div className='hw-1' >\n                <Message\n                    avatar={messageData.avatar}\n                    name={messageData.name}\n                    message={messageData.message}\n                    time={messageData.time}\n                />\n            </div>\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1;","import React from 'react'\nimport {AffairType} from \"./HW2\";\n\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType// need to fix any\n    deleteAffairCallback: (_id: number) => void// need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}\n    // need to fix\n\n    return (\n        <div>\n            {props.affair.name}\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')}\n    const setHigh = () => {props.setFilter('high')}\n    const setMiddle = () => {props.setFilter('middle')}\n    const setLow = () => {props.setFilter('low')}\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high'|'middle'|'low'\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): AffairType[] => {\n    if (filter === 'all') return affairs\n    else if (filter === 'high') return affairs.filter(f => f.priority === 'high')\n    else if (filter === 'middle') return affairs.filter(f => f.priority === 'middle')\n    else if (filter === 'low') return  affairs.filter(f => f.priority === 'low')\n    else return affairs.filter(f => f.priority === filter)\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n    return affairs.filter(a => a._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void// need to fix any\n    addUser: () => void// need to fix any\n    error: string | null // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.errorInput : s.input // need to fix with (?:)\n\n    return (\n        <div className={s.container}>\n            <div>\n                <input\n                    value={name}\n                    onChange={setNameCallback}\n                    className={inputClass}\n                    onBlur={setNameCallback}\n                />\n                <span>{error}</span>\n                <button onClick={addUser} disabled={!name}>add</button>\n            </div>\n            <div>\n                <span>{totalUsers}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string | null>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        const newName = e.currentTarget.value.trim()\n\n        if(newName){\n            setName(newName)\n            setError(null)\n        } else {\n            setName('')\n            setError('Not an empty string')\n        }\n    }\n    const addUser = () => {\n        addUserCallback(name)\n        alert(`Hello ${name} !`) // need to fix\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => {\n        const user = {\n            _id: v1(),\n            name\n        }// need to fix any\n        setUsers([...users, user]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        if (onChange) {\n            onChange(e)\n        } // если есть пропс onChange\n        // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n        if (onEnter && e.key === 'Enter') {\n            onEnter()\n        }\n        // если есть пропс onEnter\n        // и если нажата кнопка Enter\n        // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput: s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        if (onChangeChecked) {\n            onChangeChecked(e.currentTarget.checked)\n        }\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    //spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react';\r\n\r\nconst Junior = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Junior;","import React from 'react';\r\n\r\nconst JuniorPlus = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JuniorPlus;","import React from 'react'\nimport Error404 from \"./pages/Error404\";\nimport {Routes, Route} from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/Junior-plus\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior-plus'\n}\n\n\nfunction RoutesHw() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n\n                <Routes>\n                    {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                    {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n                    <Route path={'/*'} element={<Error404/>}/>\n                    <Route path={'/'} element={<PreJunior/>}/>\n                    <Route path={'/pre-junior'} element={<PreJunior/>}/>\n                    <Route path={'/junior'} element={<Junior/>}/>\n                    <Route path={'/junior-plus'} element={<JuniorPlus/>}/>\n                    // add routes\n\n                    {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n\n                </Routes>\n        </div>\n    )\n}\n\nexport default RoutesHw\n","import React from 'react'\nimport Header from './Header'\n\nimport {HashRouter} from \"react-router-dom\";\nimport RoutesHw from \"./Routes\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <Header/>\n            <RoutesHw/>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App () {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>*/}\n            {/*<HW2 />*/}\n            {/*<HW3 />*/}\n            {/*<HW4 />*/}\n            <HW5 />\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}